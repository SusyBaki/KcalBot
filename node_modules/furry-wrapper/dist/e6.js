"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const Base_1 = require("./Base");
function E6Base(endpoint, query, options) {
    return __awaiter(this, void 0, void 0, function* () {
        if (typeof query === 'undefined')
            query = '';
        if (Array.isArray(query))
            query = query.join(' ');
        const base = new Base_1.default(options);
        let url;
        if (endpoint === 'e926')
            url = `https://e926.net/posts.json?limit=1&tags=order:random ${query}` + ((options === null || options === void 0 ? void 0 : options.overrideTags) ? ` ${options === null || options === void 0 ? void 0 : options.overrideTags}` : '');
        else
            url = `https://e621.net/posts.json?limit=1&tags=order:random ${query}` + ((options === null || options === void 0 ? void 0 : options.noCub) ? '' : ' -young') + ((options === null || options === void 0 ? void 0 : options.overrideTags) ? ` ${options === null || options === void 0 ? void 0 : options.overrideTags}` : '');
        return yield base.query(url, r => { var _a; return (_a = r.data) === null || _a === void 0 ? void 0 : _a.posts[0]; });
    });
}
exports.default = Base_1.default.bundle(E6Base, {
    nsfw: 'e621',
    sfw: 'e926'
}, {
    default: (name) => {
        return function (query, options) {
            return __awaiter(this, void 0, void 0, function* () {
                return yield E6Base(name, query, options);
            });
        };
    }
});
